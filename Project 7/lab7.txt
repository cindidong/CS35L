Cindi Dong
Lab 2

Lab:
1. Getting copy of Diffutils repository
Commands:
git clone https://git.savannah.gnu.org/git/diffutils.git


2. Getting log of changes
Commands:
cd diffutils
git log > git-log.txt


3. Getting list of tags
Commands:
git tag > git-tags.txt


4. Generating patch for the commit
Commands:
emacs git-log.txt
C-s maint: quote

Output:
commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
Author: Paul Eggert <eggert@cs.ucla.edu>
Date:   Wed Jan 25 23:46:16 2012 -0800

    maint: quote 'like this' or "like this", not `like this'

man git
/patch
git format-patch -1 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
0001-maint-quote-like-this-or-like-this-not-like-this.patch
mv 0001-maint-quote-like-this-or-like-this-not-like-this.patch quote-patch.txt


5. Checking out version 3.0
Commands:
emacs git-tags.txt (checking the syntax for the version number)
git checkout v3.0


6. Applying the patch
Commands:
patch -p1 < quote-patch.txt

Output:
can't find file to patch at input line 62
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|From 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f Mon Sep 17 00:00:00 2001
|From: Paul Eggert <eggert@cs.ucla.edu>
|Date: Wed, 25 Jan 2012 23:46:16 -0800
|Subject: [PATCH] maint: quote 'like this' or "like this", not `like this'
|
|This is in response to a recent change in the GNU coding standards,
|which now suggest quoting 'like this' or "like this", instead of
|`like this' or ``like this''.
|* HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
|* doc/diffutils.texi, ms/config.bat, ms/config.site:
|* src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
|* src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
|* src/sdiff.c, src/side.c, src/system.h, src/util.c:
|* tests/help-version:
|Quote 'like this' or "like this" in commentary.
|* cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
|* man/help2man: Update to 1.40.4 version, with quoting fixed as above.
|* po/en.po: Remove translation involving `, as it's no longer needed.
|* src/cmp.c (try_help, specify_ignore_initial, usage, main):
|* src/diff.c (main, try_help, option_help_msgid, specify_value)
|(compare_files):
|* src/diff3.c (main, try_help, option_help_msgid, usage)
|(read_diff):
|* src/dir.c (compare_names):
|* src/sdiff.c (try_help, usage, check_child_status, main):
|* src/util.c (finish_output):
|* tests/help-version:
|Quote 'like this' in output.
|---
| HACKING            |  4 ++--
| NEWS               | 26 +++++++++++++-------------
| README             | 10 +++++-----
| README-hacking     |  2 +-
| TODO               |  2 +-
| cfg.mk             |  2 +-
| doc/diagmeet.note  |  2 +-
| doc/diffutils.texi |  2 +-
| man/help2man       | 33 +++++++++++++++++++--------------
| ms/config.bat      |  2 +-
| ms/config.site     |  2 +-
| po/en.po           | 14 +++-----------
| src/analyze.c      |  6 +++---
| src/cmp.c          | 20 ++++++++++----------
| src/context.c      | 10 +++++-----
| src/diff.c         | 40 ++++++++++++++++++++--------------------
| src/diff.h         |  8 ++++----
| src/diff3.c        | 26 +++++++++++++-------------
| src/dir.c          |  8 ++++----
| src/ifdef.c        |  2 +-
| src/io.c           |  4 ++--
| src/sdiff.c        | 22 +++++++++++-----------
| src/side.c         |  6 +++---
| src/system.h       |  6 +++---
| src/util.c         | 24 ++++++++++++------------
| tests/help-version | 12 ++++++------
| 26 files changed, 146 insertions(+), 149 deletions(-)
|
|diff --git a/HACKING b/HACKING
|index 3a99833..522e0b5 100644
|--- a/HACKING
|+++ b/HACKING
--------------------------
File to patch: 
Skip this patch? [y] y
Skipping patch.
1 out of 1 hunk ignored
patching file README
Hunk #1 FAILED at 9.
Hunk #3 FAILED at 60.
2 out of 3 hunks FAILED -- saving rejects to file README.rej
patching file README-hacking
Hunk #1 FAILED at 19.
1 out of 1 hunk FAILED -- saving rejects to file README-hacking.rej
patching file cfg.mk
Hunk #1 FAILED at 29.
1 out of 1 hunk FAILED -- saving rejects to file cfg.mk.rej
patching file doc/diagmeet.note
can't find file to patch at input line 249
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|diff --git a/doc/diffutils.texi b/doc/diffutils.texi
|index 58b140c..00403df 100644
|--- a/doc/diffutils.texi
|+++ b/doc/diffutils.texi
--------------------------
File to patch: 
Skip this patch? [y] y
Skipping patch.
1 out of 1 hunk ignored
can't find file to patch at input line 262
Perhaps you used the wrong -p or --strip option?
The text leading up to this was:
--------------------------
|diff --git a/man/help2man b/man/help2man
|index f9983f7..8bc961c 100755
|--- a/man/help2man
|+++ b/man/help2man
--------------------------
File to patch: 
Skip this patch? [y] y
Skipping patch.
9 out of 9 hunks ignored
patching file src/diff.c
Hunk #10 FAILED at 876.
Hunk #11 FAILED at 906.
Hunk #12 FAILED at 942.
3 out of 14 hunks FAILED -- saving rejects to file src/diff.c.rej
patching file src/diff3.c
Hunk #6 FAILED at 433.
1 out of 9 hunks FAILED -- saving rejects to file src/diff3.c.rej


7. Using git status
Commands:
git status

Output:
# HEAD detached at v3.0
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#	modified:   NEWS
#	modified:   README
#	modified:   TODO
#	modified:   doc/diagmeet.note
#	modified:   ms/config.bat
#	modified:   ms/config.site
#	modified:   po/en.po
#	modified:   src/analyze.c
#	modified:   src/cmp.c
#	modified:   src/context.c
#	modified:   src/diff.c
#	modified:   src/diff.h
#	modified:   src/diff3.c
#	modified:   src/dir.c
#	modified:   src/ifdef.c
#	modified:   src/io.c
#	modified:   src/sdiff.c
#	modified:   src/side.c
#	modified:   src/system.h
#	modified:   src/util.c
#	modified:   tests/help-version
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	NEWS.orig
#	README-hacking.orig
#	README-hacking.rej
#	README.orig
#	README.rej
#	cfg.mk.orig
#	cfg.mk.rej
#	git-log.txt
#	git-tags.txt
#	ms/config.site.orig
#	quote-patch.txt
#	src/cmp.c.orig
#	src/context.c.orig
#	src/diff.c.orig
#	src/diff.c.rej
#	src/diff.h.orig
#	src/diff3.c.orig
#	src/diff3.c.rej
#	src/dir.c.orig
#	src/sdiff.c.orig
#	src/system.h.orig
#	src/util.c.orig
#	tests/help-version.orig
no changes added to commit (use "git add" and/or "git commit -a")
This shows that I modified the files with the modified tag before them, 
and created the files that are untracked.


8. Learning about Emacs functions
vc-diff: Compare the work files in the current VC fileset with the versions 
you started from.
vc-revert: Revert the work file(s) in the current VC fileset to the last 
revision
diff-apply-hunk: Apply this hunk to its target file.
diff-goto-source: Go to the source file and line corresponding to this hunk.


9. Reverting changes
Commands:
I ran C-x v =, C-x v u, and then yes on all the files that did not end with 
a .c (NEWS, README, TODO, doc/diagmeet.note, ms/config.bat, ms/config.site, 
po/en.po, src/diff.h, src/system.h, and tests/help-version)

For the .c files, I ran C-x v =, then C-u C-c C-a on the changes that were 
enclosed in comments. The files were src/analyze.c, src/cmp.c, src/context.c, 
src/diff.c, src/diff3.c, src/dir.c. src/ifdef.c, src/io.c, src/sdiff.c, 
src/side.c, src/util.c


10. Dealing with rejected patches
I looked at each diff file, then searched the .c files for the words around 
it. I then changed them by hand.
Commands:
ls -a src/*.c.rej

Output:
src/diff3.c.rej
src/diff.c.rej

Commands:
emacs src/diff3.c.rej
-  N_("-i   append `w' and `q' commands to ed scripts"),                  
+  N_("-i   append 'w' and 'q' commands to ed scripts"),
emacs src/diff3.c
C-s append `w'

emacs src/diff.c.rej
-  N_("-l, --paginate   pass output through `pr' to paginate it"),             
+  N_("-l, --paginate   pass output through 'pr' to paginate it"), 

-  N_("-D, --ifdef=NAME   output merged file with `#ifdef NAME' diffs"),      
+  N_("-D, --ifdef=NAME   output merged file with '#ifdef NAME' diffs"),

-  N_("LTYPE is `old', `new', or `unchanged'.  GTYPE is LTYPE or `changed'."),
+  N_("LTYPE is 'old', 'new', or 'unchanged'.  GTYPE is LTYPE or 'changed'."), 

-  N_("FILES are `FILE1 FILE2' or `DIR1 DIR2' or `DIR FILE...' or 
`FILE... DIR'."),               
+  N_("FILES are 'FILE1 FILE2' or 'DIR1 DIR2' or 'DIR FILE...' or 
'FILE... DIR'."),

-  N_("If a FILE is `-', read standard input."),                   
+  N_("If a FILE is '-', read standard input."),       
emacs src/diff.c
C-s paginate   pass
C-s output merged
C-s LTYPE is `old
C-s FILES are
C-s If a FILE


11. Deleting untracked files
Commands:
I moved these to a different folder, as I need them to be turned in so 
I can't delete them.
mv git-tags.txt ..
mv git-log.txt ..
mv quote-patch.txt ..

man git clean
git clean -n 
(checked the files git clean would remove before actually removing)
Would remove NEWS.orig
Would remove README-hacking.orig
Would remove README-hacking.rej
Would remove README.orig
Would remove README.rej
Would remove cfg.mk.orig
Would remove cfg.mk.rej
Would remove ms/config.site.orig
Would remove src/#dir.c#
Would remove src/#side.c#
Would remove src/#util.c#
Would remove src/cmp.c.orig
Would remove src/context.c.orig
Would remove src/diff.c.orig
Would remove src/diff.c.rej
Would remove src/diff.h.orig
Would remove src/diff3.c.orig
Would remove src/diff3.c.rej
Would remove src/dir.c.orig
Would remove src/sdiff.c.orig
Would remove src/system.h.orig
Would remove src/util.c.orig
Would remove tests/help-version.orig

git clean -f (actually removed the files)


12. Creating my own patch
Commands:
git status (did have only 6 modified files)
git diff > ../quote-3.0-patch.txt (this is for the homework)
git diff > quote-3.0-patch.txt (for the lab)


13. Building my modified version
Commands:
emacs README-hacking
ldd --version
ldd (GNU libc) 2.12 (don't need patch because I'm on server 3)
./bootstrap
./configure
make
make check
src/diff . -
Output:
src/diff: cannot compare '-' to a directory

src/diff --help
Output:
...
FILES are 'FILE1 FILE2' or 'DIR1 DIR2' or 'DIR FILE...' or 'FILE... DIR'.
If --from-file or --to-file is given, there are no restrictions on FILES.
If a FILE is '-', read standard input.

Both tests give me the correct output.


14. Sanity check
Commands: 
Creating diffutils-3.0-patch:
cd ..
mkdir diffutils-3.0-patch
cp -r diffutils/src/*.c ./diffutils-3.0-patch

Creating diffutils-3.0:
git clone https://git.savannah.gnu.org/git/diffutils.git olddiffutils
cd olddiffutils
git checkout v3.0 (make sure both are version 3.0)
cd ..
mkdir diffutils-3.0
cp -r olddiffutils/src/*.c ./diffutils-3.0 

~/35l/week7/diffutils/src/diff -pru diffutils-3.0 diffutils-3.0-patch 
> quote-3.0-test.txt


15. Comparing the contents
Commands:
~/35l/week7/diffutils/src/diff -u quote-3.0-test.txt quote-3.0-patch.txt
The files are not identical. However, the differences are innocuous.
The differences are mostly due to one using ` instead of '.
