Cindi Dong
Lab 2

I first ran export LC_ALL='C'.
Then I checked the with the locale command to make sure 
everything was set to C.

To get words, I used the command:
sort -o words /usr/share/dict/words

Then I used wget to get the HTML for this assignment:
wget http://web.cs.ucla.edu/classes/winter20/cs35L/assign/assign2.html

I used wget to get the HTML for the Hawaiian dictionary:
wget https://www.mauimapp.com/moolelo/hwnwdshw.htm


tr -c 'A-Za-z' '[\n*]' <assign2.html
Only outputs the ASCII letters (A-Z and a-z). 
Replaces the non ASCII letters with newlines. 
The -c means anything that is not A-Z or a-z is replaced.

tr -cs 'A-Za-z' '[\n*]' <assign2.html
Non ASCII letters are replaced with newlines, 
but there is only 1 newline between each section of ASCII letters. 
This is done through the -s.

tr -cs 'A-Za-z' '[\n*]' <assign2.html | sort
Non ASCII letters are replaced with only 1 newline between them, 
but it is also sorted alphabetically. 
This is done by piping the command sort.

tr -cs 'A-Za-z' '[\n*]' <assign2.html | sort -u
Non ASCII letters are replaced with only 1 
newline between them and are sorted, 
but duplicates are ignored. 
This is done through the -u, which stands for --unique.

tr -cs 'A-Za-z' '[\n*]' <assign2.html | sort -u | comm - words
Non ASCII letters are replaced with only 1 newline between them 
and are sorted and unique. The comm command compares the 
assign2.html and words file, and prints out 3 columns. 
The first column is words unique to assign2.html, 
the second column is words unique to words, 
and the third column is words that both files contain.

tr -cs 'A-Za-z' '[\n*]' <assign2.html | sort -u | comm -23 - words
This is an English spellchecker. 
The -23 suppresses the second and third columns. 
This means that it only prints out words unique to assign2.html. 
Since the second file is an English dictionary, 
this means these are all the misspelled words.


Building buildwords:
I first created a file for my script:
touch buildwords

buildwords script:
#! /bin/bash

#remove all ?, <u>, </u>, and <br>
sed -e 's/\(?\|<u>\|<\/u>\|<br>\)//g' |

#remove \n from English lines that wrap to a new line
sed -E '/[^>]$/{N;s/\n//;}' |
sed -E '/[^>]$/{N;s/\n//;}' | 

#find all lines that start with td
grep -e "<td" | 

#delete HTML stuff at the top of the file
sed '/<td><font color/d' | 
sed '/<td width/d' | 

#delete every other line (English lines)
sed -n '0~2!p' | 

#remove all td tags
sed 's/\(<td>\|<\/td>\)//g' | 

#remove special case td tag
sed 's/<td valign="top">//g' | 

#remove another special case td tag
sed 's/<td valign="top" align="left">//g' | 

#et rid of leading and trailing spaces
sed 's/^ *//;s/ *$//;' | 

#turns ` into '
tr '\`' '\'\' | 

#turns everything into lowercase
tr '[:upper:]' '[:lower:]' | 

#replace comma, space, and dash with newline
tr '[\,\ \-]' '\n' | 

#delete all leftover empty lines
sed '/^$/d' | 

#sort list and remove duplicates
sort -u

Need to be able to run the script, so need to make buildwords executable:
chmod u+x buildwords
Creating hwords:
cat hwnwdshw.htm | ./buildwords | less > hwords

The HAWAIIANCHECKER shell command is:
tr -cs "A-Z'a-z" '[\n*]' | tr '[:upper:]' '[:lower:]' | sort -u | 
comm -23 - hwords

To test HAWAIIANCHECKER:
cat hwords | tr -cs "A-Z'a-z" '[\n*]' | tr '[:upper:]' '[:lower:]' | 
sort -u | comm -23 - hwords | wc -w
Outputs 0
cat hwords | tr -cs "A-Z'a-z" '[\n*]' | tr '[:upper:]' '[:lower:]' | 
sort -u | comm -23 - hwords
Outputs nothing

Misspelled word count:
HAWAIIANCHECKER:
cat assign2.html | tr -cs "A-Z'a-z" '[\n*]' | tr '[:upper:]' '[:lower:]' | 
sort -u | comm -23 - hwords >hwebsite
wc -w <hwebsite
Outputs 560
ENGLISHCHECKER:
cat assign2.html | tr -cs "A-Z'a-z" '[\n*]' | tr '[:upper:]' '[:lower:]' | 
sort -u | comm -23 - words >ewebsite
wc -w <ewebsite
Outputs 65

Distinct misspelled Hawaiian words 
(HAWAIIANCHECKER reports as misspelled but ENGLISHCHECKER does not):
comm -23 hwebsite ewebsite >onlywronghwords
wc -w <onlywronghwords
Outputs 498
Examples:
able
about

Distinct misspelled English words 
(ENGLISHCHECKER reports as misspelled but HAWAIIANCHECKER does not):
comm -13 hwebsite ewebsite >onlywrongewords
wc -w <onlywrongewords
Outputs 3
Examples:
lau
ha'ule